package apna_college_backtracking;

/*public class keypad_combo {
	public static void cal(String s1,String s2,String ans,int n) {
		//base case
		if(n==s1.length())
			return;
		
//		if(ans!=' ')
//		{
//			for(int i=0;i<s2.length();i++)
//				System.out.println(ans+""+s2.charAt(i));
//			return;
//		}
//		char ch=s1.charAt(n);
//		ans=ch;
//		cal(s1,s2,ans,n+1);
//		ans=' ';
//		n++;
		char ch=s1.charAt(n);
		for(int i=0;i<s1.length();i++) {
			
			ans=ans+ch+s2.charAt(i);
			System.out.println(ans+"    n="+n);
			ans="";
			cal(s1,s2,ans,n+1);
			
			
			//ans=ans.substring(0,ans.length()-1);
		}
	}
	public static void main(String args[]) {
		String s="23";
		cal("abc","def","",0);
	}
}*/
public
class
keypad_combo
{
final
static
char
[][]
L
= {{},{},{
'a'
,
'b'
,
'c'
},{
'd'
,
'e'
,
'f'
},{
'g'
,
'h'
,
'i'
},
{
'j'
,
'k'
,
'l'
},{
'm'
,
'n'
,
'o'
},{
'p'
,
'q'
,
'r'
,
's'
},
{
't'
,
'u'
,
'v'
},{
'w'
,
'x'
,
'y'
,
'z'
}};
public
static
void
letterCombinations
(
String
D
)
{
int
len
=
D
.
length
();
if
(
len
==
0
) {
System
.
out
.
println
(
""
);
return
;
}
bfs
(
0
,
len
,
new
StringBuilder
(),
D
);
}
public
static
void
bfs
(
int
pos
,
int
len
,
StringBuilder
sb
,
String
D
) {
if
(
pos
==
len
){
System
.
out
.
println
(
sb
.
toString
());
}
else
{
char
[]
letters
=
L
[
Character
.
getNumericValue
(
D
.
charAt
(
pos
))];
for
(
int
i
=
0
;
i
<
letters
.
length
;
i
++)
bfs
(
pos
+
1
,
len
,
new
StringBuilder
(
sb
).
append
(
letters
[
i
]),
D
);
}
}
public
static
void
main
(
String
args
[]){
letterCombinations
(
"23"
);
}
}